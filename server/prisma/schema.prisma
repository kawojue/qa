generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid()
  email     String   @unique
  password  String
  firstName String
  lastName  String?
  username  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  totp  Totp?
  todos Todo[]

  @@index([username])
}

model Totp {
  id        String   @id @default(uuid()) @db.Uuid
  otp       String   @unique
  expiry    DateTime
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId    String   @unique @map("user_id") @db.Uuid
}

model Todo {
  id          String    @id @default(uuid()) @db.Uuid
  title       String
  description String?
  dueDate     DateTime? @map("due_date")
  priority    Priority  @default(MEDIUM)
  status      Status    @default(PENDING)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  author      User      @relation(references: [id], fields: [authorId], onDelete: Cascade)
  authorId    String    @map("author_id") @db.Uuid
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
